#!/usr/bin/env python
# coding: utf-8

import matplotlib.pyplot as plt
import matplotlib.cm as cm
import nibabel as nb
import numpy as np

vol = np.random.randint(1,115) #To select the number of random volume

def brain_slices_RS(nifti_location, vol):

    RS_img = nb.load(nifti_location)
    RS_data = RS_img.get_data()
    print(RS_data.shape)

    RS_T1 = np.transpose(RS_data, [0, 1, 3, 2])
    RS_T2 = np.transpose(RS_T1, [0, 1, 3, 2])

    ##sagittal, coronal, axial
    fig, axes = plt.subplots(3,10, figsize=(34, 20), facecolor='w', edgecolor='k')
    fig.subplots_adjust(hspace=0.0, wspace=0.000, left=0.04, right=0.99, bottom=0.2)
    fig.suptitle(nifti_location, fontsize=48)
    axes=axes.ravel()

    x=28
    y=22
    z=5

    for i in range(10):
        #sagittal
        axes[i].imshow(np.rot90(RS_data[x, :, :, vol]), cmap=cm.gray)
        axes[i].set_title('x = {}'.format(x), fontsize=30, color='b')
        x=x+8
        axes[i].axis('off')

        #coronal
        axes[i+10].imshow(np.rot90(RS_data[:, y, :, vol]), cmap=cm.gray)
        axes[i+10].set_title('y = {}'.format(y), fontsize=30, color='b')
        axes[i+10].axis('off')
        y=y+9


        #axial
        axes[i+20].imshow(np.rot90(RS_T2[:, :, z, vol]), cmap=cm.gray)
        axes[i+20].set_title('z = {}'.format(z), fontsize=30, color='b')
        z=z+3
        axes[i+20].axis('off')

        text1 = 'I -> S' #inferior to superior
        text2 = 'P -> A' #posterior to anterior
        text3 = 'R -> L' #right to left
        text4 = '     R'
        text5 = 'L'
        plt.text(0, 0.38, text1, fontsize=24, transform=plt.gcf().transFigure, style='italic')
        plt.text(0, 0.57, text2, fontsize=24, transform=plt.gcf().transFigure, style='italic')
        plt.text(0, 0.795, text3, fontsize=24, transform=plt.gcf().transFigure, style='italic')
        plt.text(0, 0.24, text4, fontsize=24, transform=plt.gcf().transFigure, color='navy')
        plt.text(1, 0.24, text5, fontsize=24, transform=plt.gcf().transFigure, color='navy')
        plt.text(0, 0.5, text4, fontsize=24, transform=plt.gcf().transFigure, color='navy')
        plt.text(1, 0.5, text5, fontsize=24, transform=plt.gcf().transFigure, color='navy')

    return fig, axes
